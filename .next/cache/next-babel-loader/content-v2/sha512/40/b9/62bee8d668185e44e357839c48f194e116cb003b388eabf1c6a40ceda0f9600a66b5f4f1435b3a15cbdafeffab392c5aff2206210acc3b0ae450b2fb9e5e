{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport _ from 'lodash';\nimport { withPrefix } from '../utils';\nimport Header from './Header';\nimport Footer from './Footer';\nexport default class Body extends React.Component {\n  render() {\n    const page = _.get(this.props, 'page');\n\n    const pageTitle = _.get(page, 'title');\n\n    const config = _.get(this.props, 'config');\n\n    const configTitle = _.get(config, 'title');\n\n    const favicon = _.get(config, 'favicon');\n\n    const domain = _.trim(_.get(config, 'domain', ''), '/');\n\n    const seo = _.get(page, 'seo');\n\n    const seoTitle = _.get(seo, 'title');\n\n    const title = seoTitle ? seoTitle : [pageTitle, configTitle].join(' | ');\n\n    const seoDescription = _.get(seo, 'description', '');\n\n    const seoRobots = _.get(seo, 'robots', []).join(',');\n\n    const seoExtra = _.get(seo, 'extra', []).map((meta, index) => {\n      const keyName = _.get(meta, 'keyName', 'name');\n\n      const name = _.get(meta, 'name');\n\n      if (!name) {\n        return null;\n      }\n\n      const nameAttr = {\n        [keyName]: name\n      };\n\n      const relativeUrl = _.get(meta, 'relativeUrl');\n\n      let value = _.get(meta, 'value');\n\n      if (!value) {\n        return null;\n      }\n\n      if (relativeUrl) {\n        if (!domain) {\n          return null;\n        }\n\n        value = domain + withPrefix(value);\n      }\n\n      return /*#__PURE__*/_jsx(\"meta\", _objectSpread(_objectSpread({}, nameAttr), {}, {\n        content: value\n      }), index);\n    });\n\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsxs(Helmet, {\n        children: [/*#__PURE__*/_jsx(\"title\", {\n          children: title\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          charSet: \"utf-8\"\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          name: \"viewport\",\n          content: \"width=device-width, initial-scale=1\"\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          name: \"google\",\n          content: \"notranslate\"\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          name: \"description\",\n          content: seoDescription\n        }), !_.isEmpty(seoRobots) && /*#__PURE__*/_jsx(\"meta\", {\n          name: \"robots\",\n          content: seoRobots\n        }), seoExtra, favicon && /*#__PURE__*/_jsx(\"link\", {\n          rel: \"icon\",\n          href: withPrefix(favicon)\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        id: \"site-wrap\",\n        className: \"site\",\n        children: [/*#__PURE__*/_jsx(Header, {\n          page: page,\n          config: config\n        }), /*#__PURE__*/_jsx(\"main\", {\n          id: \"content\",\n          className: \"site-content\",\n          children: this.props.children\n        }), /*#__PURE__*/_jsx(Footer, {\n          config: config\n        })]\n      })]\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}