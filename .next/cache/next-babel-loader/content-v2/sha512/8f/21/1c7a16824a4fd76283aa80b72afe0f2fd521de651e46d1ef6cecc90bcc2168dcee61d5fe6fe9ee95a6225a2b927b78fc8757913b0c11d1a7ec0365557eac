{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { getData, Link, withPrefix } from '../utils';\nexport default class BlogPostCategories extends React.Component {\n  renderCategory(categoryRef, categoryLength, index, data) {\n    const category = getData(data, categoryRef);\n\n    if (!category) {\n      return null;\n    }\n\n    if (category.link) {\n      return /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: withPrefix(category.link),\n          children: category.title\n        }), index < categoryLength - 1 && ', ']\n      }, index);\n    } else {\n      return /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: category.title\n        }), index < categoryLength - 1 && ', ']\n      }, index);\n    }\n  }\n\n  render() {\n    const data = _.get(this.props, 'data');\n\n    const categories = _.get(this.props, 'categories');\n\n    const containerClass = _.get(this.props, 'containerClass', '');\n\n    const categoryLength = _.size(categories);\n\n    if (!categoryLength) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: containerClass,\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        children: \"In \"\n      }), _.map(categories, (categoryRef, index) => this.renderCategory(categoryRef, categoryLength, index, data))]\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}