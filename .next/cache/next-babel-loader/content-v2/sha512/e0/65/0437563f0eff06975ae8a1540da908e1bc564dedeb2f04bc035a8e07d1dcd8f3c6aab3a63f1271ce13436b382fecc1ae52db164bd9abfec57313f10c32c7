{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { Link, withPrefix, classNames } from '../utils';\nexport default class Action extends React.Component {\n  render() {\n    const action = _.get(this.props, 'action');\n\n    const url = _.get(action, 'url');\n\n    const label = _.get(action, 'label');\n\n    const style = _.get(action, 'style', 'link');\n\n    const classes = classNames({\n      'btn': style !== 'link',\n      'btn--secondary': style === 'secondary'\n    });\n\n    const newWindow = _.get(action, 'new_window');\n\n    const noFollow = _.get(action, 'no_follow');\n\n    const attrs = {};\n\n    if (newWindow) {\n      attrs.target = '_blank';\n    }\n\n    if (newWindow || noFollow) {\n      attrs.rel = [newWindow ? 'noopener' : '', noFollow ? 'nofollow' : ''].filter(Boolean).join(' ');\n    }\n\n    return /*#__PURE__*/_jsx(Link, _objectSpread(_objectSpread({\n      href: withPrefix(url)\n    }, attrs), {}, {\n      className: classes,\n      children: label\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}