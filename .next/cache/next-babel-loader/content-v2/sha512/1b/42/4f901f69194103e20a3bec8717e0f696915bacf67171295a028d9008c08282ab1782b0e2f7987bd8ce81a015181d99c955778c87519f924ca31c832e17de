{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { getData, Link, withPrefix } from '../utils';\n\nvar BlogPostMeta = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlogPostMeta, _React$Component);\n\n  var _super = _createSuper(BlogPostMeta);\n\n  function BlogPostMeta() {\n    _classCallCheck(this, BlogPostMeta);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BlogPostMeta, [{\n    key: \"renderAuthor\",\n    value: function renderAuthor(authorRef, data) {\n      var author = getData(data, authorRef);\n\n      if (!author) {\n        return null;\n      }\n\n      var authorName = _.trim(\"\".concat(author.first_name, \" \").concat(author.last_name));\n\n      if (author.link) {\n        return /*#__PURE__*/_jsxs(\"span\", {\n          children: [\" by \", /*#__PURE__*/_jsx(Link, {\n            href: withPrefix(author.link),\n            children: authorName\n          })]\n        });\n      } else {\n        return /*#__PURE__*/_jsxs(\"span\", {\n          children: [\" by \", authorName]\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = _.get(this.props, 'data');\n\n      var post = _.get(this.props, 'post');\n\n      var date = _.get(post, 'date');\n\n      var dateTimeAttr = moment(date).strftime('%d-%m-%Y %H:%M');\n      var formattedDate = moment(date).strftime('%d/%m/%Y');\n\n      var authorRef = _.get(post, 'author');\n\n      var containerClass = _.get(this.props, 'containerClass', '');\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: containerClass\n      });\n    }\n  }]);\n\n  return BlogPostMeta;\n}(React.Component);\n\nexport { BlogPostMeta as default };","map":null,"metadata":{},"sourceType":"module"}