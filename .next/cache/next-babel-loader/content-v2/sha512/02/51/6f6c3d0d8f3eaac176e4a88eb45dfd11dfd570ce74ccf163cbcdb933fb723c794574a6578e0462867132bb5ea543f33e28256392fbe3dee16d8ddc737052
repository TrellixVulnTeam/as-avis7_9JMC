{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Router from 'next/router';\nimport _ from 'lodash';\nimport { Link, withPrefix, classNames, getPageUrl } from '../utils';\nimport Action from './Action';\nimport Icon from './Icon';\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.handleRouteChange = this.handleRouteChange.bind(this);\n    this.menuOpenRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize, true);\n    Router.events.on('routeChangeStart', this.handleRouteChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize, true);\n    Router.events.off('routeChangeStart', this.handleRouteChange);\n  }\n\n  handleWindowResize() {\n    const menuOpenElm = _.get(this.menuOpenRef, 'current.offsetParent');\n\n    if (menuOpenElm === null) {\n      document.body.classList.remove('js-nav-open');\n    }\n  }\n\n  handleRouteChange() {\n    document.body.classList.remove('js-nav-open');\n  }\n\n  handleMenuToggle(event) {\n    event.preventDefault();\n    document.body.classList.toggle('js-nav-open');\n  }\n\n  renderNavLinks(navLinks, pageUrl) {\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(\"button\", {\n        \"aria-label\": \"Menu\",\n        className: \"btn btn--icon btn--clear navbar__menu-btn js-nav-toggle\",\n        ref: this.menuOpenRef,\n        onClick: this.handleMenuToggle.bind(this),\n        children: /*#__PURE__*/_jsx(Icon, {\n          icon: \"hamburger\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"navbar__menu\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"navbar__scroller\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"navbar__inner\",\n            children: [/*#__PURE__*/_jsx(\"button\", {\n              \"aria-label\": \"Close\",\n              className: \"btn btn--icon btn--clear navbar__close-btn js-nav-toggle\",\n              onClick: this.handleMenuToggle.bind(this),\n              children: /*#__PURE__*/_jsx(Icon, {\n                icon: \"close\"\n              })\n            }), /*#__PURE__*/_jsx(\"ul\", {\n              className: \"navbar__list menu\",\n              children: _.map(navLinks, (action, index) => {\n                const url = _.trim(_.get(action, 'url'), '/');\n\n                const style = _.get(action, 'style', 'link');\n\n                const classes = classNames('navbar__item', {\n                  'navbar__item--btn': style !== 'link',\n                  'is-active': pageUrl === url\n                });\n                return /*#__PURE__*/_jsx(\"li\", {\n                  className: classes,\n                  children: /*#__PURE__*/_jsx(Action, {\n                    action: action\n                  })\n                }, index);\n              })\n            })]\n          })\n        })\n      })]\n    });\n  }\n\n  render() {\n    const page = _.get(this.props, 'page');\n\n    const pageUrl = _.trim(getPageUrl(page), '/');\n\n    const config = _.get(this.props, 'config');\n\n    const header = _.get(config, 'header');\n\n    const logo = _.get(header, 'logo');\n\n    const logoAlt = _.get(header, 'logo_alt', '');\n\n    const title = _.get(header, 'title');\n\n    const hasNav = _.get(header, 'has_nav');\n\n    const navLinks = _.get(header, 'nav_links');\n\n    return /*#__PURE__*/_jsx(\"header\", {\n      className: \"site-header\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"container container--lg\",\n        children: /*#__PURE__*/_jsxs(\"nav\", {\n          className: \"navbar\",\n          \"aria-label\": \"Main Navigation\",\n          children: [/*#__PURE__*/_jsx(Link, {\n            className: \"sr-only\",\n            href: \"#content\"\n          }), logo ? /*#__PURE__*/_jsx(Link, {\n            className: \"navbar__logo\",\n            href: withPrefix('/'),\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: withPrefix(logo),\n              alt: logoAlt\n            })\n          }) : /*#__PURE__*/_jsx(Link, {\n            className: \"h4 navbar__title\",\n            href: withPrefix('/'),\n            children: title\n          }), hasNav && !_.isEmpty(navLinks) && this.renderNavLinks(navLinks, pageUrl)]\n        })\n      })\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}