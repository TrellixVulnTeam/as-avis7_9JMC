{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { classNames, withPrefix, markdownify } from '../utils';\nimport SectionActions from './SectionActions';\nexport default class FeaturesSection extends React.Component {\n  renderFeature(feature, index, sectionTitle) {\n    const align = _.get(feature, 'align', 'left');\n\n    const image = _.get(feature, 'image');\n\n    const imageAlt = _.get(feature, 'image_alt', '');\n\n    const imagePosition = _.get(feature, 'image_position', 'left');\n\n    const title = _.get(feature, 'title');\n\n    const content = _.get(feature, 'content');\n\n    const actions = _.get(feature, 'actions');\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: classNames('flex', 'flex--middle', 'flex--center', 'flex--col-2', {\n        'align-center': align === 'center',\n        'align-right': align === 'right'\n      }),\n      children: [image && /*#__PURE__*/_jsx(\"div\", {\n        className: classNames('cell', 'section__media', {\n          'section__media--right': imagePosition === 'right'\n        }),\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: withPrefix(image),\n          alt: imageAlt\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"section__body cell\",\n        children: [title && (sectionTitle ? /*#__PURE__*/_jsx(\"h3\", {\n          className: \"section__title\",\n          children: title\n        }) : /*#__PURE__*/_jsx(\"h2\", {\n          className: \"section__title\",\n          children: title\n        })), content && /*#__PURE__*/_jsx(\"div\", {\n          className: \"section__copy\",\n          children: markdownify(content)\n        }), !_.isEmpty(actions) && /*#__PURE__*/_jsx(\"div\", {\n          className: \"section__actions btn-group\",\n          children: /*#__PURE__*/_jsx(SectionActions, {\n            actions: actions\n          })\n        })]\n      })]\n    }, index);\n  }\n\n  render() {\n    const section = _.get(this.props, 'section');\n\n    const title = _.get(section, 'title');\n\n    const features = _.get(section, 'features');\n\n    return /*#__PURE__*/_jsxs(\"section\", {\n      className: \"section section--features\",\n      children: [title && /*#__PURE__*/_jsx(\"div\", {\n        className: \"container container--md align-center\",\n        children: /*#__PURE__*/_jsx(\"h2\", {\n          className: \"section__title\",\n          children: title\n        })\n      }), !_.isEmpty(features) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"container container--lg\",\n        children: _.map(features, (feature, index) => this.renderFeature(feature, index, title))\n      })]\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}