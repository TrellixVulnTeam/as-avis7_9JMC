{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/poun/as-avis7/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport _ from 'lodash';\nimport { Link, withPrefix, classNames, getPageUrl } from '../utils';\nimport Action from './Action';\nimport Icon from './Icon';\n\nvar Header = /*#__PURE__*/function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n    _this.handleWindowResize = _this.handleWindowResize.bind(_assertThisInitialized(_this));\n    _this.handleRouteChange = _this.handleRouteChange.bind(_assertThisInitialized(_this));\n    _this.menuOpenRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.handleWindowResize, true);\n      Router.events.on('routeChangeStart', this.handleRouteChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.handleWindowResize, true);\n      Router.events.off('routeChangeStart', this.handleRouteChange);\n    }\n  }, {\n    key: \"handleWindowResize\",\n    value: function handleWindowResize() {\n      var menuOpenElm = _.get(this.menuOpenRef, 'current.offsetParent');\n\n      if (menuOpenElm === null) {\n        document.body.classList.remove('js-nav-open');\n      }\n    }\n  }, {\n    key: \"handleRouteChange\",\n    value: function handleRouteChange() {\n      document.body.classList.remove('js-nav-open');\n    }\n  }, {\n    key: \"handleMenuToggle\",\n    value: function handleMenuToggle(event) {\n      event.preventDefault();\n      document.body.classList.toggle('js-nav-open');\n    }\n  }, {\n    key: \"renderNavLinks\",\n    value: function renderNavLinks(navLinks, pageUrl) {\n      return /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(\"button\", {\n          \"aria-label\": \"Menu\",\n          className: \"btn btn--icon btn--clear navbar__menu-btn js-nav-toggle\",\n          ref: this.menuOpenRef,\n          onClick: this.handleMenuToggle.bind(this),\n          children: /*#__PURE__*/_jsx(Icon, {\n            icon: \"hamburger\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"navbar__menu\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"navbar__scroller\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"navbar__inner\",\n              children: [/*#__PURE__*/_jsx(\"button\", {\n                \"aria-label\": \"Close\",\n                className: \"btn btn--icon btn--clear navbar__close-btn js-nav-toggle\",\n                onClick: this.handleMenuToggle.bind(this),\n                children: /*#__PURE__*/_jsx(Icon, {\n                  icon: \"close\"\n                })\n              }), /*#__PURE__*/_jsx(\"ul\", {\n                className: \"navbar__list menu\",\n                children: _.map(navLinks, function (action, index) {\n                  var url = _.trim(_.get(action, 'url'), '/');\n\n                  var style = _.get(action, 'style', 'link');\n\n                  var classes = classNames('navbar__item', {\n                    'navbar__item--btn': style !== 'link',\n                    'is-active': pageUrl === url\n                  });\n                  return /*#__PURE__*/_jsx(\"li\", {\n                    className: classes,\n                    children: /*#__PURE__*/_jsx(Action, {\n                      action: action\n                    })\n                  }, index);\n                })\n              })]\n            })\n          })\n        })]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var page = _.get(this.props, 'page');\n\n      var pageUrl = _.trim(getPageUrl(page), '/');\n\n      var config = _.get(this.props, 'config');\n\n      var header = _.get(config, 'header');\n\n      var logo = _.get(header, 'logo');\n\n      var logoAlt = _.get(header, 'logo_alt', '');\n\n      var title = _.get(header, 'title');\n\n      var hasNav = _.get(header, 'has_nav');\n\n      var navLinks = _.get(header, 'nav_links');\n\n      return /*#__PURE__*/_jsx(\"header\", {\n        className: \"site-header\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"container container--lg\",\n          children: /*#__PURE__*/_jsxs(\"nav\", {\n            className: \"navbar\",\n            \"aria-label\": \"Main Navigation\",\n            children: [/*#__PURE__*/_jsx(Link, {\n              className: \"sr-only\",\n              href: \"#content\",\n              children: \"Skip to main content\"\n            }), logo ? /*#__PURE__*/_jsx(Link, {\n              className: \"navbar__logo\",\n              href: withPrefix('/'),\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: withPrefix(logo),\n                alt: logoAlt\n              })\n            }) : /*#__PURE__*/_jsx(Link, {\n              className: \"h4 navbar__title\",\n              href: withPrefix('/'),\n              children: title\n            }), hasNav && !_.isEmpty(navLinks) && this.renderNavLinks(navLinks, pageUrl)]\n          })\n        })\n      });\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport { Header as default };","map":null,"metadata":{},"sourceType":"module"}